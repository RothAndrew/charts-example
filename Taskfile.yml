# https://taskfile.dev

version: "3"

tasks:
  validate:
    desc: Validate the pre-commit hooks
    cmds:
      - task: validate:precommit
      - task: validate:lint

  validate:precommit:
    desc: Validates that pre-commit hooks were run
    cmds:
      - pre-commit install
      - pre-commit run -a

  validate:lint:
    desc: Runs helm lint on all charts
    dir: charts
    cmds:
      - find ./* -type d -mindepth 0 -maxdepth 0 -print0 | xargs -0 helm lint --strict

  test:
    desc: Run automated tests
    cmds:
      - task: package

  secure:
    desc: Run automated security checks
    cmds:
      - echo "N/A"

  deliver:
    desc: Deliver artifact
    cmds:
      - task: chart-releaser:package
      - task: chart-releaser:upload

  deploy:
    desc: Deploy project
    cmds:
      - |
        rm -rf .cr-index \
        && mkdir .cr-index \
        && helm-cr index --config .chart-releaser-config.yaml \
        && currentBranch=$(git branch --show-current) \
        && git checkout gh-pages \
        && cp -f .cr-index/index.yaml index.yaml \
        && git add index.yaml \
        && git commit --no-verify --message="Update index.yaml" \
        && git push origin gh-pages \
        && git checkout $currentBranch

  chart-releaser:package:
    desc: Package all charts, then delete ones that already have been uploaded
    cmds:
      - rm -rf .cr-release-packages
      - helm-cr package charts/*
      - |
        git fetch --tags
        for package in .cr-release-packages/*.tgz; do
          filename=$(basename -- "$package")
          filenameWithoutExt="${filename%.*}"
          if git rev-parse "$filenameWithoutExt" >/dev/null 2>&1; then
            echo "Deleting package '$filenameWithoutExt' since it has already been uploaded."
            rm $package
          fi
        done

  chart-releaser:upload:
    desc: Upload charts to GitHub Releases
    vars:
      commit: '{{ coalesce .TASK_VAR_COMMIT "<no value>" }}'
      token: '{{ coalesce .CR_TOKEN "<no value>" }}'
    preconditions:
      - sh: test "{{.commit}}" != "<no value>"
        msg: "TASK_VAR_COMMIT not set"
      - sh: test "{{.token}}" != "<no value>"
        msg: "CR_TOKEN not set"
    cmds:
      - |
        if [ -n "$(find ".cr-release-packages" -maxdepth 0 -type d -empty 2>/dev/null)" ]; then
            echo "No action taken. There was nothing to upload"
        else
            helm-cr upload --config .chart-releaser-config.yaml --commit "{{.commit}}"
        fi
